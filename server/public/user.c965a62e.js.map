{"version":3,"sources":["views/admin/user/queryForm.jsx","views/admin/user/index.jsx"],"names":["RangePicker","Option","QueryForm","state","article","colon","elements","key","label","widget","e","preventDefault","props","form","validateFieldsAndScroll","errors","values","console","log","getQuery","handleSubmit","getFormMeta","Component","PropTypes","func","isRequired","create","UserManage","list","pagination","loading","title","dataIndex","render","text","count","backgroundColor","sorter","a","b","comments","createdAt","isBefore","record","handleDelete","id","username","current","pageSize","query","setState","axios","get","params","page","then","res","total","rows","userId","confirm","content","onOk","delete","code","fetchList","success","message","getColumns","handleChange"],"mappings":";AAsDe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,0BAAA,IAAA,EAAA,EAAA,QAAA,iBAAA,QAAA,4BAAA,IAAA,EAAA,EAAA,QAAA,mBAAA,QAAA,2BAAA,IAAA,EAAA,EAAA,QAAA,kBAAA,EAAA,EAAA,QAAA,0CAAA,EAAA,EAAA,QAAA,uCAAA,EAAA,EAAA,QAAA,qDAAA,EAAA,EAAA,QAAA,0CAAA,EAAA,EAAA,QAAA,iDAAA,EAAA,EAAA,QAAA,oCAAA,EAAA,EAAA,QAAA,0CAAA,QAAA,4BAAA,IAAA,EAAA,EAAA,QAAA,mBAAA,QAAA,iCAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,wBAtDf,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,eAGA,EAAA,EAAA,QAAA,2CACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,WAgDe,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9Cf,IAAMA,EAAc,EAAWA,QAAAA,YACzBC,EAAS,EAAOA,QAAAA,OAGhBC,GADL,GAAA,EAAQ,EAAA,SAAA,SAAAC,GAASA,OAAAA,EAAMC,YAAvB,EAAA,EA2Cc,SAAA,GAAA,SAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAAA,OAAA,GAAA,EAAA,EAAA,SAAA,MAAA,GAAA,EAAA,EAAA,SAAA,IAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,MArCC,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,cAAA,WACL,MAAA,CACLC,OAAO,EACPC,SAAU,CACR,CACEC,IAAK,WACLC,MAAO,KACPC,OAAQ,EAAA,QAAA,cAAA,EAAA,QAAA,CAAO,YAAY,gBAMpB,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,eAAA,SAAAC,GACbA,EAAEC,iBACGC,EAAAA,MAAMC,KAAKC,wBAAwB,SAACC,EAAQC,GAC3CD,IACJE,QAAQC,IAAI,gBAAiBF,GACxBJ,EAAAA,MAAMO,SAASH,QAmBX,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,CAAA,CAAA,IAAA,SAfJ,MAAA,WAEL,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,cACb,EAAA,QAAA,cAAA,EAAA,QAAA,CAAM,OAAO,SAAS,SAAU,KAAKI,cACnC,EAAC,QAAA,cAAA,EAAD,QAAA,CAAa,KAAM,KAAKC,cAAe,KAAM,KAAKT,MAAMC,MACtD,EAAA,QAAA,cAAA,EAAA,QAAA,CAAQ,KAAK,UAAU,SAAS,UADlC,aAWK,EAAA,CA1CSS,EACH,YAAA,EAAA,EAAA,SAAA,EAAA,YAAA,CACjBH,SAAUI,EAAUC,QAAAA,KAAKC,aAH5B,EAEoB,KAAA,EAyCN,EAAA,EAAKC,QAAAA,QAAL,CAAcxB,GAAd,QAAA,QAAA;;ACiDAyB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAAAA,QAAAA,2BAAAA,IAAAA,EAAAA,EAAAA,QAAAA,kBAAAA,QAAAA,6BAAAA,IAAAA,EAAAA,EAAAA,QAAAA,oBAAAA,QAAAA,2BAAAA,IAAAA,EAAAA,EAAAA,QAAAA,kBAAAA,EAAAA,EAAAA,QAAAA,wCAAAA,EAAAA,EAAAA,QAAAA,mDAAAA,QAAAA,4BAAAA,IAAAA,EAAAA,EAAAA,QAAAA,mBAAAA,QAAAA,2BAAAA,IAAAA,EAAAA,EAAAA,QAAAA,kBAAAA,EAAAA,EAAAA,QAAAA,0CAAAA,EAAAA,EAAAA,QAAAA,uCAAAA,EAAAA,EAAAA,QAAAA,qDAAAA,EAAAA,EAAAA,QAAAA,0CAAAA,EAAAA,EAAAA,QAAAA,iDAAAA,EAAAA,EAAAA,QAAAA,oCAAAA,EAAAA,EAAAA,QAAAA,0CAvGf,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,gBAoGeA,SAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,WAAAA,OAAAA,EAAAA,IAAAA,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,IAAAA,IAAAA,KAAAA,EAAAA,GAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,OAAAA,gBAAAA,OAAAA,yBAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,GAAAA,EAAAA,KAAAA,EAAAA,IAAAA,OAAAA,eAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAjGTA,IAAAA,EAiGSA,SAAAA,GAAAA,SAAAA,IAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,SAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,SAAAA,MAAAA,GAAAA,EAAAA,EAAAA,SAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,MAhGL,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,QAAA,CACNC,KAAM,GACNC,WAAY,GACZC,SAAS,KAOE,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,aAAA,WACJ,MAAA,CACL,CACEC,MAAO,MACPC,UAAW,YAEb,CACED,MAAO,MACPC,UAAW,WACXC,OAAQ,SAAAC,GACAC,IAAAA,GAAQ,EAAiBD,EAAAA,kBAAAA,GACxBC,OAAU,IAAVA,EAAc,EAAA,QAAA,cAAA,EAAA,QAAA,CAAO,MAAOA,EAAO,MAAO,CAAEC,gBAAiB,aAAkBD,GAExFE,OAAQ,SAACC,EAAGC,GAAM,OAAA,EAAiBD,EAAAA,kBAAAA,EAAEE,WAAY,EAAiBD,EAAAA,kBAAAA,EAAEC,YAEtE,CACET,MAAO,OACPC,UAAW,YACXK,OAAQ,SAACC,EAAGC,GAAO,OAAA,EAAOD,EAAAA,SAAAA,EAAEG,WAAWC,SAASH,EAAEE,WAAa,GAAK,IAEtE,CACEV,MAAO,KACPE,OAAQ,SAACC,EAAMS,GACb,OAAA,EAAA,QAAA,cAAA,EAAA,QAAA,CAAQ,KAAK,SAAS,QAAS,WAAM,OAAA,EAAKC,aAAaD,EAAOE,GAAIF,EAAOG,YADnE,YASF,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,YAAA,SAA8C,GAA3CC,IAAAA,EAAAA,EAAAA,QAAAA,OAAU,IAAA,EAAA,EAAiC,EAA9BC,EAAAA,EAAAA,SAAAA,OAAW,IAAA,EAAA,GAAmB,EAAZC,GAAY,EAAA,EAAA,SAAA,EAAA,CAAA,UAAA,aACnDC,EAAAA,SAAS,CAAEpB,SAAS,IACpBqB,EAAAA,MAAMC,IAAI,oBAAqB,CAAEC,QAAM,EAAA,EAAA,SAAA,CAAIC,KAAMP,EAASC,SAAAA,GAAaC,KAAWM,KAAK,SAAAC,GACpF3B,IAAAA,EAAa,CACjBkB,QAAAA,EACAC,SAAAA,EACAS,MAAOD,EAAIrB,OAERe,EAAAA,SAAS,CAAEtB,KAAM4B,EAAIE,KAAM7B,WAAAA,EAAYC,SAAS,SAI1C,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,eAAA,SAAC6B,EAAQb,GAChBc,EAAAA,QAAAA,QAAQ,CACZ7B,MAAO,qBACP8B,QAAgBf,OAAAA,OAAAA,EAFJ,KAGZgB,KAAM,WACCX,EAAAA,MAAMY,OAAO,eAAgB,CAAEV,OAAQ,CAAEM,OAAAA,KAAYJ,KAAK,SAAAC,GAC5C,MAAbA,EAAIQ,OACDC,EAAAA,UAAU,EAAK9D,MAAM0B,YAClBqC,EAAAA,QAAAA,QAAQV,EAAIW,kBAOf,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,eAAA,SAAAtC,GACRoC,EAAAA,WAAepC,EAAAA,EAAAA,SAAAA,GAAAA,EAAe,EAAK1B,MAAM8C,WAGrC,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,WAAA,SAAAA,GACJC,EAAAA,SAAS,CAAED,MAAAA,IACXgB,EAAAA,WAAehB,EAAAA,EAAAA,SAAAA,GAAAA,EAApB,CAA2BF,QAAS,OAsBzBpB,EAAAA,OAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,EAAAA,EAAAA,SAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBA1FO,MAAA,WACbsC,KAAAA,UAAU,CAAEX,KAAM,MAyFZ3B,CAAAA,IAAAA,SAnBJ,MAAA,WAC+B,IAAA,EAAA,KAAKxB,MAAnCyB,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,QAExB,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,IACb,EAAC,QAAA,cAAA,EAAD,QAAA,CAAW,SAAU,KAAKX,WAC1B,EAAA,QAAA,cAAA,EAAA,QAAA,CACE,OAAO,KACP,UAFF,EAGE,QAAS,KAAKiD,aACd,QAAStC,EACT,WAAYF,EACZ,WAAYC,EACZ,SAAU,KAAKwC,oBAOV1C,EAAAA,CAjGUL,EAAAA,WAiGVK,EAAAA,EAAAA,QAAAA,QAAAA","file":"user.c965a62e.js","sourceRoot":"../../src","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, Form, Input, Select, DatePicker } from 'antd'\nimport FormBuilder from '../../../components/helper/FormBuilder'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nconst RangePicker = DatePicker.RangePicker\nconst Option = Select.Option\n\n@connect(state => state.article)\nclass QueryForm extends Component {\n  static propTypes = {\n    getQuery: PropTypes.func.isRequired\n  }\n\n  getFormMeta = () => {\n    return {\n      colon: true,\n      elements: [\n        {\n          key: 'username',\n          label: '姓名',\n          widget: <Input placeholder=\"请输入姓名\" />\n        }\n      ]\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((errors, values) => {\n      if (errors) return\n      console.log('submit form: ', values)\n      this.props.getQuery(values)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"query-form\">\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n          <FormBuilder meta={this.getFormMeta()} form={this.props.form}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              检索\n            </Button>\n          </FormBuilder>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(QueryForm)\n","import React, { Component } from 'react'\nimport { getCommentsCount } from '../../../lib'\nimport moment from 'moment'\nimport QueryForm from './queryForm'\nimport { Table, Button, Modal, message, Badge } from 'antd'\n\nclass UserManage extends Component {\n  state = {\n    list: [],\n    pagination: {},\n    loading: false\n  }\n\n  componentDidMount() {\n    this.fetchList({ page: 1 })\n  }\n\n  getColumns = () => {\n    return [\n      {\n        title: '用户名',\n        dataIndex: 'username'\n      },\n      {\n        title: '评论数',\n        dataIndex: 'comments',\n        render: text => {\n          const count = getCommentsCount(text)\n          return count !== 0 ? <Badge count={count} style={{ backgroundColor: '#52c41a' }} /> : count\n        },\n        sorter: (a, b) => getCommentsCount(a.comments) - getCommentsCount(b.comments)\n      },\n      {\n        title: '注册时间',\n        dataIndex: 'createdAt',\n        sorter: (a, b) => (moment(a.createdAt).isBefore(b.createdAt) ? 1 : -1)\n      },\n      {\n        title: '操作',\n        render: (text, record) => (\n          <Button type=\"danger\" onClick={() => this.handleDelete(record.id, record.username)}>\n            删除\n          </Button>\n        )\n      }\n    ]\n  }\n\n  fetchList = ({ current = 1, pageSize = 10, ...query }) => {\n    this.setState({ loading: true })\n    this.axios.get('/user/getUserList', { params: { page: current, pageSize, ...query } }).then(res => {\n      const pagination = {\n        current,\n        pageSize,\n        total: res.count\n      }\n      this.setState({ list: res.rows, pagination, loading: false })\n    })\n  }\n\n  handleDelete = (userId, username) => {\n    Modal.confirm({\n      title: '您确认删除该用户?，此操作不可恢复！',\n      content: `用户： ${username} `,\n      onOk: () => {\n        this.axios.delete('/user/delete', { params: { userId } }).then(res => {\n          if (res.code === 200) {\n            this.fetchList(this.state.pagination)\n            message.success(res.message)\n          }\n        })\n      }\n    })\n  }\n\n  handleChange = pagination => {\n    this.fetchList({ ...pagination, ...this.state.query })\n  }\n\n  getQuery = query => {\n    this.setState({ query })\n    this.fetchList({ ...query, current: 1 })\n  }\n\n  render() {\n    const { list, pagination, loading } = this.state\n    return (\n      <div className=\"\">\n        <QueryForm getQuery={this.getQuery} />\n        <Table\n          rowKey=\"id\"\n          bordered\n          columns={this.getColumns()}\n          loading={loading}\n          dataSource={list}\n          pagination={pagination}\n          onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default UserManage\n"]}