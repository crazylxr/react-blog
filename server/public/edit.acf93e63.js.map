{"version":3,"sources":["views/admin/article/edit/components/SelfCate.jsx","views/admin/article/edit/components/Cate.jsx","views/admin/article/edit/index.jsx"],"names":["SeleCate","list","inputVisible","inputValue","removedTag","state","filter","t","setState","input","focus","e","target","value","CommonlyList","props","includes","map","item","index","isLongTag","length","tagElem","handleClose","slice","saveInputRef","width","handleInputChange","handleInputConfirm","showInput","background","borderStyle","Component","PropTypes","array","isRequired","SelectCates","CheckableTag","store","article","num","sortList","sort","a","b","count","d","name","checked","selectList","nextSelectList","selfList","$selfCateRef","type","showNum","isEdit","getCommonlyList","onRef","nextProps","i","handleSelect","el","string","number","bool","Edit","title","tagList","categoryList","tags","$tagRef","getResult","categories","$categoryRef","params","content","smde","axios","put","articleId","then","res","confirm","onOk","history","push","post","data","id","SimpleMDE","element","document","getElementById","childElementCount","autofocus","autosave","previewRender","translateMarkdown","location","get","handleChange","handleSubmit"],"mappings":"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","file":"edit.acf93e63.js","sourceRoot":"../../src","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Input, Tooltip, Icon, Tag } from 'antd'\n\nclass SeleCate extends Component {\n  static propTypes = {\n    CommonlyList: PropTypes.array.isRequired\n  }\n\n  state = {\n    list: [],\n    inputVisible: false,\n    inputValue: ''\n  }\n\n  handleClose = removedTag => {\n    const list = this.state.list.filter(t => t !== removedTag)\n    this.setState({ list })\n  }\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus())\n  }\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value })\n  }\n\n  handleInputConfirm = () => {\n    let { inputValue, list } = this.state\n    const CommonlyList = this.props.CommonlyList\n\n    if (inputValue && !list.includes(inputValue) && !CommonlyList.includes(inputValue)) {\n      list = [...list, inputValue]\n    }\n    this.setState({\n      list,\n      inputVisible: false,\n      inputValue: ''\n    })\n  }\n\n  saveInputRef = input => (this.input = input)\n\n  render() {\n    const { list, inputVisible, inputValue } = this.state\n    return (\n      <Fragment>\n        {list.map((item, index) => {\n          const isLongTag = item.length > 20\n          const tagElem = (\n            <Tag key={item} closable afterClose={() => this.handleClose(item)} color=\"#1890ff\">\n              {isLongTag ? `${item.slice(0, 20)}...` : item}\n            </Tag>\n          )\n          return isLongTag ? (\n            <Tooltip title={item} key={item}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          )\n        })}\n\n        {inputVisible && (\n          <Input\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            style={{ width: 78 }}\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n\n        {!inputVisible && (\n          <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n            <Icon type=\"plus\" /> New Tag\n          </Tag>\n        )}\n      </Fragment>\n    )\n  }\n}\n\nexport default SeleCate\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Tag } from 'antd'\n\nimport SelfCate from './SelfCate'\n\nconst CheckableTag = Tag.CheckableTag\n\n/**\n * 选择分类、标签的组件\n *\n * @class SelectCates\n * @extends {Component}\n */\n@connect(store => store.article)\nclass SelectCates extends Component {\n  constructor(props) {\n    super(props)\n    const { type, showNum } = this.props\n\n    let selectList\n\n    if (!this.props.isEdit) {\n      this.CommonlyList = this.getCommonlyList(this.props[`${type}List`], showNum)\n      selectList = this.CommonlyList[0] ? [this.CommonlyList[0]] : [] // 默认选中第一个  selectList = this.props.list\n    }\n\n    this.state = { selectList }\n  }\n\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    showNum: PropTypes.number,\n    list: PropTypes.array,\n    isEdit: PropTypes.bool\n  }\n\n  static defaultProps = {\n    type: 'tags',\n    showNum: 10\n  }\n\n  /**\n   * 获取常用的分类、标签列表\n   *\n   * @param {Array} list - 列表数据\n   * @param {Number} num - 获取的数量\n   */\n  getCommonlyList = (list, num = 10) => {\n    const sortList = list.sort((a, b) => b.count - a.count).map(d => d.name)\n    return sortList.slice(0, num)\n  }\n\n  // 行点击选中事件\n  handleSelect = (value, checked) => {\n    const { selectList } = this.state\n    const nextSelectList = checked ? [...selectList, value] : selectList.filter(t => t !== value)\n    this.setState({ selectList: nextSelectList })\n  }\n\n  // 获取最终结构\n  getResult = () => {\n    const { selectList } = this.state\n    const selfList = this.$selfCateRef.state.list\n    return [...selectList, ...selfList]\n  }\n\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.list !== nextProps.list && nextProps.isEdit) {\n      this.setState({ selectList: nextProps.list })\n    }\n  }\n\n  render() {\n    const { selectList } = this.state\n    const { type, isEdit } = this.props\n    return (\n      <div className=\"blog-formItem\">\n        <span className=\"label\">{type}: </span>\n\n        {isEdit\n          ? this.props.list.map((item, i) => (\n              <CheckableTag\n                key={item}\n                checked={selectList.includes(item)}\n                onChange={checked => this.handleSelect(item, checked)}>\n                {item}\n              </CheckableTag>\n            ))\n          : this.CommonlyList.map((item, i) => (\n              <CheckableTag\n                key={item}\n                checked={selectList.includes(item)}\n                onChange={checked => this.handleSelect(item, checked)}>\n                {item}\n              </CheckableTag>\n            ))}\n        <SelfCate CommonlyList={this.props.list} ref={el => (this.$selfCateRef = el)} />\n      </div>\n    )\n  }\n}\n\nexport default SelectCates\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport SimpleMDE from 'simplemde'\nimport 'simplemde/dist/simplemde.min.css'\nimport './index.less'\nimport { translateMarkdown } from '../../../../lib/index'\n\nimport { Button, Input, Modal, BackTop } from 'antd'\nimport SelectCate from './components/Cate'\n\n@connect(state => state.article)\nclass Edit extends Component {\n  state = {\n    value: '',\n    title: '',\n    tagList: [],\n    categoryList: [],\n    isEdit: false // 组件状态 更新或创建\n  }\n\n  componentDidMount() {\n    this.smde = new SimpleMDE({\n      element: document.getElementById('editor').childElementCount,\n      autofocus: true,\n      autosave: true,\n      previewRender: translateMarkdown\n    })\n\n    if (this.props.history.location.state) {\n      const { articleId } = this.props.history.location.state\n      this.axios.get(`/article/get/${articleId}`).then(res => {\n        const { title, tags, categories, content } = res.data\n        this.smde.value(content)\n        const tagList = tags.map(d => d.name)\n        const categoryList = categories.map(d => d.name)\n        this.setState({ title, tagList, categoryList, isEdit: true, articleId })\n      })\n    }\n  }\n\n  /**\n   * 获取常用的分类、标签列表\n   *\n   * @param {Array} list - 列表数据\n   * @param {Number} num - 获取的数量\n   */\n  getCommonlyList = (list, num = 10) => {\n    const sortList = list.sort((a, b) => b.count - a.count)\n    return sortList.slice(0, num)\n  }\n\n  handleSubmit = () => {\n    const tags = this.$tagRef.getResult()\n    const categories = this.$categoryRef.getResult()\n    let params = {\n      title: this.state.title,\n      content: this.smde.value(),\n      categories,\n      tags\n    }\n    if (this.state.isEdit) {\n      this.axios.put('/article/update', { ...params, articleId: this.state.articleId }).then(res => {\n        Modal.confirm({\n          title: '文章修改成功！是否查看详情？',\n          onOk: () => this.props.history.push(`/article/${this.state.articleId}`)\n        })\n      })\n    } else {\n      this.axios.post('/article/create', params).then(res => {\n        Modal.confirm({\n          title: '文章创建成功！是否立即查看？',\n          onOk: () => this.props.history.push(`/article/${res.data.id}`)\n        })\n      })\n    }\n  }\n\n  handleUpdate = () => {}\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    const { title, value, categoryList, tagList, isEdit } = this.state\n    return (\n      <div className=\"edit\">\n        <div className=\"blog-formItem\">\n          <span className=\"label\">标题：</span>\n          <Input\n            placeholder=\"请输入文章标题\"\n            className=\"title-input\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <SelectCate\n          type=\"category\"\n          showNum={10}\n          onRef={el => (this.$categoryRef = el)}\n          list={categoryList}\n          isEdit={isEdit}\n        />\n        <SelectCate\n          type=\"tag\"\n          showNum={12}\n          onRef={el => (this.$tagRef = el)}\n          list={tagList}\n          isEdit={isEdit}\n        />\n        <br />\n        <textarea id=\"editor\" defaultValue={value} />\n        <Button onClick={this.handleSubmit} type=\"primary\">\n          {isEdit ? '更新' : '创建'}\n        </Button>\n        <BackTop />\n      </div>\n    )\n  }\n}\n\nexport default Edit\n"]}