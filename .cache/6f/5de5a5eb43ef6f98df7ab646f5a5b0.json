{"id":"../node_modules/codemirror/addon/mode/overlay.js","dependencies":[{"name":"/Users/licai/Documents/priviteProject/react-blog/package.json","includedInParent":true,"mtime":1562300508368},{"name":"/Users/licai/Documents/priviteProject/react-blog/node_modules/codemirror/package.json","includedInParent":true,"mtime":1562228054947},{"name":"../../lib/codemirror","loc":{"line":15,"column":16},"parent":"/Users/licai/Documents/priviteProject/react-blog/node_modules/codemirror/addon/mode/overlay.js","resolved":"/Users/licai/Documents/priviteProject/react-blog/node_modules/codemirror/lib/codemirror.js"}],"generated":{"js":"var define;\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/codemirror/addon/mode/overlay.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}}],"sources":{"../node_modules/codemirror/addon/mode/overlay.js":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"},"lineCount":92}},"error":null,"hash":"56e33364808b9af89a482c95633146a0","cacheData":{"env":{}}}